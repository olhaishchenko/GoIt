# Рекурсія добре підходить до задачі flatentening. Це процес вирівнювання
# списків, який полягає в позбавленні вкладеної структури. Наприклад список
# вигляду [1, 2, [3, 4, [5, 6]], 7] має бути перетворений на плоский (flat) список [1, 2, 3, 4, 5, 6, 7]
#
# Напишіть функцію flatten, яка приймає на вхід список, рекурсивнo
# вирівнюватиме цей список і повертатиме пласку версію списку.
#
# Для виконання завдання можна дотримуватися наступного алгоритму:
#
# Якщо вхідний список порожній, то:
#   Повертаємо порожній список
# Якщо перший елемент списку є списком, то:
#   Отримуємо перший список, рекурсивно викликавши функцію з першим елементом списку
#   Отримуємо другий список, рекурсивно викликавши функцію з рештою списку без першого елемента
#   Повертаємо конкатенацію двох списків
# Якщо перший елемент списку не є списком, то:
#   Отримуємо перший список із першого елемента списку
#   Отримуємо другий список, рекурсивно викликавши функцію з рештою списку без першого елемента
#   Повертаємо конкатенацію двох списків

def flatten(data):
    data_list: list = []
    if len(data) == 0:
        return data_list
    for i in range(len(data)):
        if type(data[i]) == list:
            data_list.extend(flatten(data[i]))
            data_list.extend(flatten(data[i+1:]))
            return data_list
        elif type(data[i]) is not list:
            data_list.append(data[i])
            data_list.extend(flatten(data[i+1:]))
            return data_list

print(flatten([1, 2, [3, 4, [5, 6]], 7]))


