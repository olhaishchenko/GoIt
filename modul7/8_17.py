# "2+ 34-5 * 3" => ['2', '+', '34', '-', '5', '*', '3']
# З метою спрощення вважаємо, що числа можуть бути тільки цілими,
#  і вхідний рядок завжди міститиме математичний вираз, що складається з дужок, чисел та операторів.

# Зверніть увагу, що лексеми можуть відокремлюватися один від 
# одного різною кількістю прогалин, а можуть і не відокремлюватися зовсім.
#  Прогалини не є лексемами та до підсумкового списку потрапити не повинні.
def token_parser(s):
    s = s.replace(' ', '')
    list_s = []
    number_s = ''
    for char in s:
        if char in ('+', '-', '*', '/', ')', '('):
            list_s.append(number_s)
            list_s.append(char)
            number_s = ''
        else:
            number_s += char
    
    list_s.append(number_s)
    return list_s
        
print(token_parser("2+ 34-5 * 32"))
print(token_parser("   "))
print(token_parser('(2+ 35) *4 - 5 * 3'))
print(token_parser('2+ (36 -  5) *4 - 65 * 3'))
